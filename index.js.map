{"version":3,"file":"index.js","mappings":"yBAAe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,E,qkBCVRQ,SAASC,eAAe,OAAuBC,UAAhD,QAkBA,ICQQC,EACFC,EDoBAC,GCrBEF,EAAc,IAAIG,IACpBF,ODoBQG,ECJE,CACZC,SAfe,kBAAyBJ,GAgBxCK,SAde,SAACC,GAChBN,EDdoC,WAGnC,IAFHA,EAEG,uDAFK,CAAEO,QAAS,GACnBD,EACG,uDADM,CAAEE,KAAM,OAEjB,OAAQF,EAAOE,MACb,IAAK,MACH,cACKR,GADL,IAEEO,QAASP,EAAMO,QAAU,IAG7B,IAAK,MACH,cACKP,GADL,IAEEO,QAASP,EAAMO,QAAU,IAG7B,IAAK,OACH,cACKP,GADL,IAEEO,QAASP,EAAMO,QAAUD,EAAOG,UAMtC,OAAOT,ECZGU,CAAQV,EAAOM,GACvBP,EAAYY,SAAQ,SAACC,GAAD,OAAgBA,QAapCC,UAVgB,SAACD,GAEjB,OADAb,EAAYe,IAAIF,GACT,WACLb,EAAW,OAAQa,ODUxBhB,SAASC,eAAe,OAAuBC,UAAhD,sCACkBG,EAAMG,kBADxB,aACkB,EAAkBG,QADpC,yKAQA,IAAMQ,EAAYnB,SAASoB,cAAc,QACnCC,EAAYrB,SAASoB,cAAc,QACnCE,EAAatB,SAASoB,cAAc,SACpCG,EAAcvB,SAASoB,cAC3B,wBAEII,EAASxB,SAASoB,cAAc,MAEtCD,EAAUM,iBAAiB,SAAS,kBAClCpB,EAAMI,SAAS,CACbG,KAAM,WAIVS,EAAUI,iBAAiB,SAAS,kBAClCpB,EAAMI,SAAS,CACbG,KAAM,WAIVU,EAAWG,iBAAiB,SAAS,kBACnCpB,EAAMI,SAAS,CACbG,KAAM,OACNC,QAASa,OAAOH,EAAY7B,YAIhCW,EAAMY,WAAU,WAAM,MACpBO,EAAOtB,UAAP,6BAA+BG,EAAMG,kBAArC,aAA+B,EAAkBG,Y","sources":["webpack://webpack-2/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://webpack-2/./src/index.ts","webpack://webpack-2/./src/configureStore.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { configureStore, Reducer } from \"./configureStore\";\n\n(document.getElementById(\"app\") as HTMLElement).innerHTML = `Redux`;\n\ntype State = {\n  counter: number;\n};\n\ntype Action =\n  | {\n      type: \"inc\";\n    }\n  | {\n      type: \"dec\";\n    }\n  | {\n      type: \"plus\";\n      payload: number;\n    };\n\nconst reducer: Reducer<State, Action> = (\n  state = { counter: 5 },\n  action = { type: \"inc\" }\n) => {\n  switch (action.type) {\n    case \"inc\": {\n      return {\n        ...state,\n        counter: state.counter + 1,\n      };\n    }\n    case \"dec\": {\n      return {\n        ...state,\n        counter: state.counter - 1,\n      };\n    }\n    case \"plus\": {\n      return {\n        ...state,\n        counter: state.counter + action.payload,\n      };\n    }\n    default:\n    // nothing\n  }\n  return state;\n};\n\nconst store = configureStore(reducer);\n\n(document.getElementById(\"app\") as HTMLElement).innerHTML = `\n   <h1>Counter: ${store.getState()?.counter}</h1>\n   <button class=\"inc\">inc</button>\n   <button class=\"dec\">dec</button>\n   <br />\n   <input type=\"number\" value=\"3\" /><button class=\"plus\">plus</button>\n `;\n\nconst incButton = document.querySelector(\".inc\") as HTMLButtonElement;\nconst decButton = document.querySelector(\".dec\") as HTMLButtonElement;\nconst plusButton = document.querySelector(\".plus\") as HTMLButtonElement;\nconst numberInput = document.querySelector(\n  'input[type=\"number\"]'\n) as HTMLInputElement;\nconst header = document.querySelector(\"h1\") as HTMLHeadElement;\n\nincButton.addEventListener(\"click\", () =>\n  store.dispatch({\n    type: \"inc\",\n  })\n);\n\ndecButton.addEventListener(\"click\", () =>\n  store.dispatch({\n    type: \"dec\",\n  })\n);\n\nplusButton.addEventListener(\"click\", () =>\n  store.dispatch({\n    type: \"plus\",\n    payload: Number(numberInput.value),\n  })\n);\n\nstore.subscribe(() => {\n  header.innerHTML = `Counter: ${store.getState()?.counter}`;\n});","export type Store<State = any, Action = { type: string }> = {\n  getState(): State | undefined;\n  dispatch(action: Action): any;\n  subscribe(cb: () => void): () => void;\n};\n\nexport type Reducer<State, Action> = (\n  state: State | undefined,\n  action: Action\n) => State;\n\nexport type Middleware<State, Action> = (\n  store: Store<State, Action>\n) => (next: (action: Action) => any) => (action: Action) => any;\n\nexport type ConfigureStore<State, Action> = (\n  reducer: Reducer<State, Action>,\n  initialState?: State | undefined,\n  middlewares?: Middleware<State, Action>[]\n) => Store<State, Action>;\n\nexport type Subscriber = () => void;\n\nexport function configureStore<State = any, Action = { type: string }>(\n  reducer: Reducer<State, Action>,\n  initialState?: State | undefined,\n  middlewares?: Middleware<State, Action>[]\n): Store<State, Action> {\n  const subscribers = new Set<Subscriber>();\n  let state = initialState;\n\n  const getState = (): State | undefined => state;\n\n  const dispatch = (action: Action): any => {\n    state = reducer(state, action);\n    subscribers.forEach((subscriber) => subscriber());\n  };\n\n  const subscribe = (subscriber: Subscriber): (() => void) => {\n    subscribers.add(subscriber);\n    return () => {\n      subscribers.delete(subscriber);\n    };\n  };\n\n  const store = {\n    getState,\n    dispatch,\n    subscribe,\n  };\n\n  return store;\n}"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","document","getElementById","innerHTML","subscribers","state","store","Set","configureStore","getState","dispatch","action","counter","type","payload","reducer","forEach","subscriber","subscribe","add","incButton","querySelector","decButton","plusButton","numberInput","header","addEventListener","Number"],"sourceRoot":""}